set runtimepath+=~/.vim_runtime

source ~/.vim_runtime/vimrcs/basic.vim
source ~/.vim_runtime/vimrcs/filetypes.vim
source ~/.vim_runtime/vimrcs/plugins_config.vim
source ~/.vim_runtime/vimrcs/extended.vim
"
" Action --> :verbose map ,

" =============================================
" @@@@@@@@@@ Vim-plug Manager @@@@@@@@@@ 
" =============================================
" PlugInstall --> TODO Improve
source ~/.vim/autoload/vim-plug-init.vim
" =============================================
call plug#begin()
" =============================================
" VIM-LOG-HIGHLIGHTING
" ******************************
" https://github.com/MTDL9/vim-log-highlighting
Plug 'mtdl9/vim-log-highlighting'
" =============================================
" VIM-AIRLINE
" ******************************
" https://github.com/vim-airline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
" =============================================
" FZF
" ******************************
" https://github.com/junegunn/fzf/blob/master/README-VIM.md
Plug 'junegunn/fzf'
" =============================================
" RAINBOW CSV
" ******************************
" https://vimawesome.com/plugin/rainbow-csv
Plug 'mechatroner/rainbow_csv'
"
" =============================================
" NerdTreeGitPlugin
" ******************************
" https://github.com/Xuyuanp/nerdtree-git-plugin
Plug 'preservim/nerdtree' |
            \ Plug 'Xuyuanp/nerdtree-git-plugin' |
            \ Plug 'ryanoasis/vim-devicons'
" https://github.com/ryanoasis/vim-devicons
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'

call plug#end()
" =============================================
" =============================================
let g:airline_theme='badwolf'
let g:airline_powerline_fonts = 1

"FZF:
" This is the default option:
"   - Preview window on the right with 50% width
"   - CTRL-/ will toggle preview window.
" - Note that this array is passed as arguments to fzf#vim#with_preview function.
" - To learn more about preview window options, see `--preview-window` section of `man fzf`.
let g:fzf_preview_window = ['right:50%', 'ctrl-/']

" Preview window on the upper side of the window with 40% height,
" hidden by default, ctrl-/ to toggle
let g:fzf_preview_window = ['up:40%:hidden', 'ctrl-/']

" Empty value to disable preview window altogether
let g:fzf_preview_window = []"

vnoremap <leader>F :FZF<CR>
nnoremap <leader>F :FZF<CR>

"TABLINE:
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
" let g:airline_theme='gruvbox'
" let g:airline_section_b = '%{getcwd()}' " in section B of the status line display the CWD
" let g:airline#extensions#tabline#enabled = 1           " enable airline tabline
" let g:airline#extensions#tabline#show_close_button = 0 " remove 'X' at the end of the tabline
" let g:airline#extensions#tabline#tabs_label = ''       " can put text here like BUFFERS to denote buffers (I clear it so nothing is shown)
" let g:airline#extensions#tabline#buffers_label = ''    " can put text here like TABS to denote tabs (I clear it so nothing is shown)
" let g:airline#extensions#tabline#fnamemod = ':t'       " disable file paths in the tab
" let g:airline#extensions#tabline#show_tab_count = 0    " dont show tab numbers on the right
" let g:airline#extensions#tabline#show_buffers = 0      " dont show buffers in the tabline
" let g:airline#extensions#tabline#tab_min_count = 2     " minimum of 2 tabs needed to display the tabline
" let g:airline#extensions#tabline#show_splits = 0       " disables the buffer name that displays on the right of the tabline
" let g:airline#extensions#tabline#show_tab_nr = 0       " disable tab numbers 
" let g:airline#extensions#tabline#show_tab_type = 0     " disables the weird ornage arrow on the tabline
"

" =============================================
" MY CONFIGS
" ========
try
source ~/.vim_runtime/my_configs.vim
catch
endtry
" =============================================

" =============================================
" GRUVBOX THEME
" ========
" let g:gruvbox_(option) = '(value)'
let g:gruvbox_contrast_dark='hard'
colorscheme gruvbox
" =============================================

" =============================================
" USE SYSTEM CLIPPBOARD
" ========
vnoremap <leader>y "*y
nnoremap <leader>y "*y
" vnoremap <leader>p "*p
" =============================================

" =============================================
" FUNCTION KEYS
" ========
" F3
set hlsearch!
noremap <F3> :set hlsearch!<CR>

" F4
set nu relativenumber
noremap <F4> :set nu! relativenumber!<CR>

" F10
" Wrap/Unwrap
nnoremap <F10> :set wrap! <CR>
" =============================================

" YANK UNTIL EOL
nmap Y y$

" =============================================
" TABULATIONS
" ========
vnoremap < <gv
vnoremap > >gv
" =============================================

" =============================================
" FOLDING
" ========
" Disable folding
set nofoldenable    
set foldmethod=syntax
" =============================================

" =============================================
" NERD TREE
" ========
" NERDTree position and size
let g:NERDTreeWinPos="left"
let g:NERDTreeWinSize=80

" NerdTree
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

set encoding=UTF-8

" let g:NERDTreeGitStatusIndicatorMapCustom = {
"                 \ 'Modified'  :'✹',
"                 \ 'Staged'    :'✚',
"                 \ 'Untracked' :'✭',
"                 \ 'Renamed'   :'➜',
"                 \ 'Unmerged'  :'═',
"                 \ 'Deleted'   :'✖',
"                 \ 'Dirty'     :'✗',
"                 \ 'Ignored'   :'☒',
"                 \ 'Clean'     :'✔︎',
"                 \ 'Unknown'   :'?',
"                 \ }

" let g:NERDTreeGitStatusUseNerdFonts = 1 " you should install nerdfonts by yourself. default: 0
" let g:NERDTreeGitStatusUntrackedFilesMode = 'all' " a heavy feature too. default: normal
" let g:NERDTreeGitStatusGitBinPath = '/your/file/path' " default: git (auto find in path)

" let g:NERDTreeGitStatusShowClean = 1 " default: 0

" let g:NERDTreeGitStatusConcealBrackets = 0 " default: 0


" " NERDTree open default
" autocmd vimenter * NERDTree
" autocmd StdinReadPre * let s:std_in=1
" autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif
" NERDTree autoclose
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" NERDTree close vim
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" =============================================
"

" =============================================
" Window management
" =============================================
set autochdir

set splitbelow
set splitright
" =============================================
" Terminal
" =============================================
nnoremap <Leader>tt :exe "terminal"<CR>
" =============================================


" =============================================
"  TESTING
" =============================================
"
" TODO WIP - Window management
" =============================================
" nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 1.5)<CR>
" nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>

" nnoremap + :resize +5<CR>
" nnoremap <leader>+ :resize +5<CR>
" nnoremap <leader>- :resize -5<CR>
" nnoremap <leader>+ :vertical resize +5<CR>
" nnoremap <leader>- :vertical resize -5<CR>


" TODO WIP - Highlight yank selection ---------
" =============================================
" hi HighlightedyankRegion cterm=reverse gui=reverse
" let g:highlightedyank_highlight_color = "rgba(200, 200, 50, 100)"
" let g:highlightedyank_highlight_duration = 500
" let g:highlightedyank_highlight_duration = "1000"

" https://github.com/machakann/vim-highlightedyank/issues/36
" highlight HighlightedyankRegion cterm=reverse gui=reverse

" if !exists('##TextYankPost')
"   map y <Plug>(highlightedyank)
" endif



" set list listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:.¬


